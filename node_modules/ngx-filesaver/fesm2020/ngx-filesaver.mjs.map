{"version":3,"file":"ngx-filesaver.mjs","sources":["../../lib/src/filesaver.service.ts","../../lib/src/filesaver.directive.ts","../../lib/src/filesaver.module.ts","../../lib/ngx-filesaver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { saveAs, FileSaverOptions } from 'file-saver';\n\n@Injectable({ providedIn: 'root' })\nexport class FileSaverService {\n  get isFileSaverSupported(): boolean {\n    try {\n      return !!new Blob();\n    } catch (e) {\n      return false;\n    }\n  }\n\n  genType(fileName?: string): string {\n    if (!fileName || fileName.lastIndexOf('.') === -1) {\n      return 'text/plain';\n    }\n    const type = fileName.substr(fileName.lastIndexOf('.') + 1);\n    switch (type) {\n      case 'txt':\n        return 'text/plain';\n      case 'xml':\n      case 'html':\n        return `text/${type}`;\n      case 'json':\n        return 'octet/stream';\n      default:\n        return `application/${type}`;\n    }\n  }\n\n  save(blob: Blob | null, fileName?: string, filtType?: string, option?: FileSaverOptions): void {\n    if (!blob) {\n      throw new Error('Data argument should be a blob instance');\n    }\n\n    const file = new Blob([blob], { type: filtType || blob.type || this.genType(fileName) });\n    saveAs(file, decodeURI(fileName || 'download'), option);\n  }\n\n  saveText(txt: string, fileName?: string, option?: FileSaverOptions): void {\n    const blob = new Blob([txt]);\n    this.save(blob, fileName, undefined, option);\n  }\n}\n","import { Directive, ElementRef, Input, HostListener, EventEmitter, Output } from '@angular/core';\nimport { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FileSaverOptions } from 'file-saver';\nimport { FileSaverService } from './filesaver.service';\n\n@Directive({\n  selector: '[fileSaver]',\n  exportAs: 'fileSaver',\n})\nexport class FileSaverDirective {\n  @Input() method = 'GET';\n  @Input() http?: Observable<HttpResponse<Blob>>;\n  @Input() query: any;\n  @Input() header: any;\n  @Input() url!: string;\n  @Input() fileName?: string;\n  @Input() fsOptions?: FileSaverOptions;\n  @Output() readonly success = new EventEmitter<HttpResponse<Blob>>();\n  @Output() readonly error = new EventEmitter<any>();\n\n  constructor(private el: ElementRef<HTMLButtonElement>, private fss: FileSaverService, private httpClient: HttpClient) {\n    if (!fss.isFileSaverSupported) {\n      el.nativeElement.classList.add(`filesaver__not-support`);\n    }\n  }\n\n  private getName(res: HttpResponse<Blob>) {\n    return decodeURI(this.fileName || res.headers.get('filename') || res.headers.get('x-filename') || '');\n  }\n\n  @HostListener('click')\n  _click(): void {\n    if (!this.fss.isFileSaverSupported) {\n      return;\n    }\n    let req = this.http;\n    if (!req) {\n      let params = new HttpParams();\n      const query = this.query || {};\n      // tslint:disable-next-line:forin\n      for (const item in query) {\n        params = params.set(item, query[item]);\n      }\n\n      req = this.httpClient.request(this.method, this.url, {\n        observe: 'response',\n        responseType: 'blob',\n        headers: this.header,\n        params,\n      });\n    }\n\n    this.setDisabled(true);\n    req.subscribe(\n      (res) => {\n        if (res.status !== 200 || res.body!.size <= 0) {\n          this.error.emit(res);\n          return;\n        }\n        this.fss.save(res.body, this.getName(res), undefined, this.fsOptions);\n        this.success.emit(res);\n      },\n      (err) => this.error.emit(err),\n      () => this.setDisabled(false),\n    );\n  }\n\n  setDisabled(status: boolean): void {\n    const el = this.el.nativeElement;\n    el.disabled = status;\n    el.classList[status ? 'add' : 'remove'](`filesaver__disabled`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FileSaverDirective } from './filesaver.directive';\n\n@NgModule({\n  declarations: [FileSaverDirective],\n  exports: [FileSaverDirective],\n})\nexport class FileSaverModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}